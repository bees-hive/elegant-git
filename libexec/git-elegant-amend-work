#!/usr/bin/env bash
set -e

command-purpose() {
    cat <<MESSAGE
Amends the last commit.
MESSAGE
}

command-synopsis() {
    cat <<MESSAGE
usage: git elegant amend-work
MESSAGE
}

command-description() {
    cat<<MESSAGE
Amends the last commit by incorporating the current state of the repository.
The command provides full control of what modifications should be included by
starting an interactive commit process.

The command doesn't allow to modify the history of the protected branches.

Approximate commands flow is
\`\`\`bash
==>> git elegant amend-work
git add --interactive
git diff --cached --check
git commit --amend
\`\`\`
MESSAGE
}

default(){
    local current_branch=$(git rev-parse --abbrev-ref HEAD)
    source ${BINS}/plugins/configuration-protected-branches
    if is-branch-protected ${current_branch} ; then
        error-box "No direct commits to the protected '${current_branch}' branch."
        error-text "Please read more on ${__site}."
        error-text "Run 'git elegant start-work' prior to retrying this command."
        exit 42
    fi
    git-verbose add --interactive
    git-verbose diff --cached --check
    git-verbose commit --amend
}
