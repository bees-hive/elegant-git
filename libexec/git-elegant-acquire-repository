#!/usr/bin/env bash
set -e

command-purpose() {
    cat <<MESSAGE
Configures current repository.
MESSAGE
}

command-synopsis() {
    cat <<MESSAGE
usage: git elegant acquire-repository
MESSAGE
}

command-description() {
    cat<<MESSAGE
Applies the "basics", "standards", "aliases", and "signature" configurations
to the current Git repository using \`git config --local\`.

To find out what will be configured, please visit
${__site}/en/latest/configuration/
MESSAGE
}

default() {
    source ${BINS}/plugins/configuration
    if $(is-acquired) ; then
        basics-configuration --local user_name user_email
        aliases-removing --local
    else
        basics-configuration --local user_name user_email core_editor
        standards-configuration --local \
          core_comment \
          apply_whitespace \
          fetch_prune \
          fetch_pruneTags \
          core_autocrlf_darwinlinux \
          core_autocrlf_windows pull_rebase \
          rebase_autoStash \
          credential_helper_darwin
        aliases-removing --local
        aliases-configuration --local $(git elegant show-commands)
    fi
    type -p gpg >/dev/null 2>&1 || return 0
    info-box "Configuring signature..."
    local listkeys="gpg --list-secret-keys --keyid-format long $(git config --local user.email)"
    command-text ${listkeys}
    ${listkeys} 2>/dev/null || {
        info-text "There is no gpg key for the given email."
        info-text "A signature is not configured."
        return 0
    }
    info-text "From the list of GPG keys above, copy the GPG key ID you'd like to use."
    info-text "It will be"
    info-text "    3AA5C34371567BD2"
    info-text "for the output like this"
    info-text "    sec   4096R/3AA5C34371567BD2 2016-03-10 [expires: 2017-03-10]"
    info-text "    A330C91F8EC4BC7AECFA63E03AA5C34371567BD2"
    info-text "    uid                          Hubot"
    info-text ""
    info-text "If you don't want to configure signature, just hit Enter button."
    question-text "Please pass a key that has to sign objects of the current repository: "
    read key
    if [[ -n ${key} ]] ; then
        git-verbose config --local user.signingkey ${key}
        git-verbose config --local gpg.program $(type -p gpg)
        git-verbose config --local commit.gpgsign true
        git-verbose config --local tag.forceSignAnnotated true
        git-verbose config --local tag.gpgSign true
    else
        info-text "The signature is not configured as the empty key is provided."
    fi
}
