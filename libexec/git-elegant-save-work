#!/usr/bin/env bash
set -e

command-purpose() {
    cat <<MESSAGE
Commits current modifications.
MESSAGE
}

command-synopsis() {
    cat <<MESSAGE
usage: git elegant save-work
MESSAGE
}

command-description() {
    cat<<MESSAGE
Saves available modifications as a new commit. The command provides full
control of what modifications should be included by starting an interactive
commit process.

The command doesn't allow to modify the history of the protected branches.

If there are trailing whitespaces in the modifications, the commit is rejected.

Approximate commands flow is
\`\`\`bash
==>> git elegant save-work
git add --interactive
git diff --cached --check
git commit
\`\`\`
MESSAGE
}

default(){
    local current_branch=$(git rev-parse --abbrev-ref HEAD)
    source ${BINS}/plugins/configuration-protected-branches
    if is-branch-protected ${current_branch} ; then
        error-box "No direct commits to the protected '${current_branch}' branch."
        error-text "Please read more on ${__site}."
        error-text "Run 'git elegant start-work' prior to retrying this command."
        exit 42
    fi
    git-verbose add --interactive
    git-verbose diff --cached --check
    git-verbose commit
}
