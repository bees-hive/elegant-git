#!/usr/bin/env bash
set -e

command-purpose() {
    cat <<MESSAGE
Configures your Git installation.
MESSAGE
}

command-synopsis() {
    cat <<MESSAGE
usage: git elegant acquire-git
MESSAGE
}

command-description() {
    cat<<MESSAGE
Applies the "basics", "standards", and "aliases" configurations to the current
Git installation using \`git config --global\`.

The command may ask to provide some information that is needed for Git
configuration. All further executions require fewer inputs as Elegant Git
reuses previous values and will require inputs in case of new configuration
options are added.

To find out what will be configured, please visit
${__site}/en/latest/configuration/
MESSAGE
}

default() {
    source ${BINS}/plugins/configuration
    if ! $(is-acquired) ; then
        info-box "Thank you for installing Elegant Git! Let's configure it..."
        cat <<MESSAGE
Elegant Git aims to standardize how a work environment should be configured.
It is achieved by

1. applying the configuration for a concrete repository only (a local
   configuation that is managed by "git elegant acquire-repository")
2. applying the configuration for both Git installation (global configuration
   that is managed by this command) and a repisitory (managed by
   "git elegant acquire-repository")

The second option is preferred in case of the installation of a newer Elegant
Git version as it allows you don't refresh a configuration for each local
repository where Elegant Git is used. Also, if the global configuration is
applied, it doesn't force you to use Elegant Git for all local repositories you
interact with. It is still up to you.

If needed, please read more about the configuration approach to be used on
${__site}/en/latest/configuration/.
MESSAGE
        question-text "Would you like to apply a global configuration? (y/n) "
        read answer
        if [[ ${answer} == "y" ]]; then
            info-text "Applying global configuration..."
        else
            cat <<MESSAGE
You've decided to stay with local configurations. Great!
Now you have to follow some rules:

1. if you want to acquire existing local repository
        git-elegant acquire-repository

2. if you need to clone a repository
        git-elegant clone-repository

3. if you need to create a new repository
        git-elegant init-repository

MESSAGE
            exit 0
        fi
    fi
    basics-configuration --global -- user_name user_email core_editor
    standards-configuration --global \
      core_comment \
      apply_whitespace \
      fetch_prune \
      fetch_pruneTags \
      core_autocrlf_darwinlinux \
      core_autocrlf_windows pull_rebase \
      rebase_autoStash \
      credential_helper_darwin \
      acquired
    aliases-removing --global
    aliases-configuration --global $(git elegant show-commands)
}
