#!/usr/bin/env bash

# 8 ANSI colors
TEXT_COLOR_BLACK=30
TEXT_COLOR_RED=31
TEXT_COLOR_GREEN=32
TEXT_COLOR_BROWN=33
TEXT_COLOR_BLUE=34
TEXT_COLOR_PURPLE=35
TEXT_COLOR_CYAN=36
TEXT_COLOR_GRAY=37
TEXT_COLOR_DEFAULT=0

# 4 ANSI text formats
TEXT_FORMAT_NORMAL=0
TEXT_FORMAT_BOLD=1
TEXT_FORMAT_UNDERLINE=4
TEXT_FORMAT_BLINKING=5

--colored-line() {
    # usage: --colored-line <format> <color> <message>...
    local COLOR=""
    local RESET=""
    if [[ -t 1 ]]; then
        COLOR="\e[${1};${2}m"
        RESET="\e[m"
    fi
    shift; shift
    printf "${COLOR}"
    local prefix=""
    for part in "$@"; do
        printf "%s" "${prefix}${part}"
        prefix=" "
    done
    printf "${RESET}"
}

--colored-text() {
    # usage: --colored-text <format> <color> <message>...
    --colored-line "$@"
    printf "\n"
}

command-text() {
    # Display a CLI command
    local COLOR=""
    local RESET=""
    if [[ -t 1 ]]; then
        COLOR="\e[${TEXT_FORMAT_BOLD};${TEXT_COLOR_GREEN}m"
        RESET="\e[m"
    fi
    printf "${COLOR}==>> ${RESET}"
    --colored-text ${TEXT_FORMAT_BOLD} ${TEXT_COLOR_BLUE} "$@"
}

info-text() {
    # Display a regular message
    --colored-text ${TEXT_FORMAT_NORMAL} ${TEXT_COLOR_GREEN} "$@"
}

--box-text(){
    local LAYOUT=${1}
    shift
    t="$@xxxxxx"
    c=${replace:-=}
    ${LAYOUT} ${t//?/$c}
    ${LAYOUT} "$c$c $@ $c$c"
    ${LAYOUT} ${t//?/$c}
}

info-box() {
    # Display an important message
     --box-text info-text "$@"
}

error-text() {
    # Display an error message within a single-line log
    --colored-text ${TEXT_FORMAT_BOLD} ${TEXT_COLOR_RED} "$@"
}

error-box() {
    # Display an error message within a multi-line log
    --box-text error-text "$@"
}

question-text() {
    # Display a question on current cursor's line
    --colored-line ${TEXT_FORMAT_NORMAL} ${TEXT_COLOR_PURPLE} "$@"
}
