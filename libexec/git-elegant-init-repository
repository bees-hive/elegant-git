#!/usr/bin/env bash
set -e

command-purpose() {
    cat <<MESSAGE
Initializes a new repository and configures it.
MESSAGE
}

command-synopsis() {
    cat <<MESSAGE
usage: git elegant init-repository
MESSAGE
}

command-description() {
    cat<<MESSAGE
Creates an empty Git repository (or reinitialize an existing one), runs its
configuration, and creates an initial empty commit.

Approximate commands flow is
\`\`\`bash
==>> git elegant init-repository
git init
git elegant acquire-repository
git commit --allow-empty --file a-message-of-initial-commit
git show
\`\`\`
MESSAGE
}

default() {
    git-verbose init
    git elegant acquire-repository
    local message="a-message-of-initial-commit"
    cat <<MESSAGE > ${message}
Add initial empty commit

This commit is the first commit in this working tree. It does not have
any changes. However, it simplifies further work at least in the
following cases:
- it's possible to create a branch now
- it's possible to manage the second commit if it requires some
polishing after creation

This commit is created automatically by Elegant Git after the
initialization of a new repository.

MESSAGE
    git-verbose commit --allow-empty --file ${message}
    remove-file ${message}
    git-verbose show
}
